#Implementation of queue using circular array

#include <stdio.h>
#include<stdlib.h>
int l=2;
int a[2];
int f=-1,r=-1,t,i,k;


int isFull()
{   
    if(((r+1)%l)==f)
    {
        printf("QUEUE OVERFLOW\n") ;
        return 1;
    }
    else
        return 0;
}

int isEmpty()
{
    if(r==f)
        printf("QUEUE UNDERFLOW\n");
    else
        return 0;
}

void enqueue()
{
    printf("enter the element>>\n");
    scanf("%d",&t);

    if(isFull())
    {   
       int* b=(int*)malloc((2*l)*sizeof(int));
       for(i=0;i<l;i++)
            b[i]=a[i];
       l=2*l;
       r=(r+1)%l;
       b[r]=t;
     
       a=b;
    }
    else
    {   
        r=(r+1)%l;
        a[r]=t;
        
    }
}

void dequeue()
{
    if(isEmpty());
    
    else
    {   
        printf("%d is removed\n",a[f]);
        a[f]=0;
        f=(f+1)%l;
        if(f==(l/2))
            {   
                k=0;
                int *d=(int*)malloc((l/2)*sizeof(int));
                l=l/2;
                for(i=f;i<=r;i++,k++)
                     d[k]=a[i];
                a=d;
            }
    }
}


int main() 
{  
    int n,c,m;
	do
	{   
	    printf("1.enqueue 2.dequeue 3.isEmpty 4.isFull 5.exit\n");
	    scanf("%d",&c);
	    switch(c)
	    {
	        case 1: enqueue();
	                if(f==-1 && r==-1)
	                    f++;
	                break;
	       
	       case 2: dequeue();
	                break;
	                
	       case 3:m=isEmpty();
	                break;
	       
	       case 4:m=isFull();
	                break;
	                
	    }
	    
	}while(c!=5);
	return 0;
}
